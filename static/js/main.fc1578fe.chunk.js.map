{"version":3,"sources":["chat/Input.js","chat/Messages.js","chat/Members.js","chat/Main.js","App.js","index.js"],"names":["Input","props","handleSubmit","e","preventDefault","state","inputText","trim","length","sendMessage","setState","handleChange","target","value","className","onSubmit","disabled","this","isLoading","type","placeholder","onChange","autoFocus","React","Component","Messages","currentMember","messages","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","map","message","myMessage","clientId","id","member","clientData","name","color","style","background","data","ref","Members","members","console","log","index","random_name","require","randomColor","ROOM_NAME","getRandomColor","luminosity","format","Main","useState","setMember","setMembers","setMessages","setIsLoading","drone","useMemo","window","Scaledrone","on","error","room","subscribe","filter","useCallback","publish","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc1578fe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default class Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inputText: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inputTrim = this.state.inputText.trim();\r\n    if (inputTrim.length > 0) {\r\n      this.props.sendMessage(this.state.inputText);\r\n      this.setState({ inputText: \"\" });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n        <input\r\n          disabled={this.props.isLoading}\r\n          type=\"text\"\r\n          placeholder=\"Enter message and press enter or Send Button\"\r\n          value={this.state.inputText}\r\n          onChange={(e) => this.handleChange(e)}\r\n        />\r\n        <input\r\n          disabled={this.props.isLoading}\r\n          type=\"Submit\"\r\n          value=\"Send\"\r\n          autoFocus={true}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default function Messages({ currentMember, messages }) {\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {messages.map((message) => {\r\n        const myMessage = message.clientId === currentMember.id;\r\n\r\n        const { name, color } = message.member.clientData;\r\n\r\n        return (\r\n          <li\r\n            className={myMessage ? \"message fromMe\" : \"message\"}\r\n            key={message.id}\r\n          >\r\n            <span style={{ color: color }} className=\"member\">\r\n              {name}\r\n            </span>\r\n            <span style={{ background: color }} className=\"text\">\r\n              {message.data}\r\n            </span>\r\n          </li>\r\n        );\r\n      })}\r\n      <div ref={messagesEndRef} />\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default function Members(members) {\r\n  console.log(members);\r\n  return (\r\n    <div className=\"members\">\r\n      <span>Online: </span>\r\n      {members.members.map((member, index) => {\r\n        if (members.members.length === index + 1) {\r\n          return <span key={member.id}>{member.clientData.name} </span>;\r\n        } else {\r\n          return <span key={member.id}>{member.clientData.name}, </span>;\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Messages from \"./Messages\";\r\nimport \"./css/style.css\";\r\nimport Members from \"./Members\";\r\n\r\nconst CHANNEL_ID = \"meflNXPM4zkSd7rh\";\r\n\r\nconst random_name = require(\"node-random-name\");\r\n\r\nvar randomColor = require(\"randomcolor\");\r\n\r\nconst ROOM_NAME = \"observable-room\";\r\n\r\nconst getRandomColor = () => {\r\n  const color = randomColor({\r\n    luminosity: \"light\",\r\n    format: \"rgb\",\r\n  });\r\n  return color;\r\n};\r\n\r\nexport default function Main() {\r\n  const [member, setMember] = useState({\r\n    name: random_name(),\r\n    color: getRandomColor(),\r\n  });\r\n  const [members, setMembers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const drone = useMemo(\r\n    () => new window.Scaledrone(CHANNEL_ID, { data: member }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    drone.on(\"open\", (error) => {\r\n      if (error) {\r\n        return console.error(error);\r\n      }\r\n\r\n      setMember({\r\n        name: random_name(),\r\n        color: getRandomColor(),\r\n        id: drone.clientId,\r\n      });\r\n\r\n      const room = drone.subscribe(ROOM_NAME);\r\n\r\n      room.on(\"open\", (error) => {\r\n        if (error) {\r\n          return console.error(error);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n\r\n      room.on(\"members\", (members) => {\r\n        setMembers(() => [...members]);\r\n      });\r\n\r\n      room.on(\"member_join\", (member) => {\r\n        setMembers((members) => [...members, member]);\r\n      });\r\n\r\n      room.on(\"member_leave\", ({ id }) => {\r\n        setMembers((members) => members.filter((member) => member.id !== id));\r\n      });\r\n\r\n      room.on(\"message\", (message) => {\r\n        // svaki puta kada se event message pojavi u roomu, izvršiti će se funkcija u setMessages, callback ce dohvatiti zadnje stanje messages-a\r\n        setMessages((messages) => [...messages, message]);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = useCallback(\r\n    (message) => {\r\n      drone.publish({\r\n        room: ROOM_NAME,\r\n        message,\r\n      });\r\n    },\r\n    [drone]\r\n  );\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n        <Members members={members} />\r\n        <Messages currentMember={member} messages={messages} />\r\n        <Input isLoading={isLoading} sendMessage={sendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\nimport Main from \"./chat/Main\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}