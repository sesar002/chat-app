{"version":3,"sources":["chat/Input.js","chat/Messages.js","chat/Members.js","chat/Main.js","App.js","index.js"],"names":["Input","props","handleSubmit","e","preventDefault","state","inputText","trim","length","sendMessage","setState","handleChange","target","value","className","onSubmit","disabled","this","isLoading","type","placeholder","onChange","autoFocus","React","Component","Messages","currentMember","messages","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","scrollToBottom","newMessages","map","message","data","timestamp","clientId","id","member","clientData","name","color","reduce","array","newMessage","console","log","myMessage","style","mess","time","Date","hours","getHours","minutes","getMinutes","background","ref","Members","members","index","random_name","require","randomColor","ROOM_NAME","getRandomColor","luminosity","format","Main","useState","setMember","setMembers","setMessages","setIsLoading","drone","useMemo","window","Scaledrone","on","error","room","subscribe","filter","useCallback","publish","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0b05486.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default class Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inputText: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inputTrim = this.state.inputText.trim();\r\n    if (inputTrim.length > 0) {\r\n      this.props.sendMessage(this.state.inputText);\r\n      this.setState({ inputText: \"\" });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputText: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n        <input\r\n          disabled={this.props.isLoading}\r\n          type=\"text\"\r\n          placeholder=\"Enter message\"\r\n          value={this.state.inputText}\r\n          onChange={(e) => this.handleChange(e)}\r\n        />\r\n        <input\r\n          disabled={this.props.isLoading}\r\n          type=\"Submit\"\r\n          value=\"Send\"\r\n          autoFocus={true}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default function Messages({ currentMember, messages }) {\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const newMessages = messages\r\n    .map((message) => {\r\n      const { data, timestamp, clientId, id } = message;\r\n      const { name, color } = message.member.clientData;\r\n      return {\r\n        clientId: clientId,\r\n        name: name,\r\n        color: color,\r\n        messages: [{ data: data, timestamp: timestamp, id: id }],\r\n      };\r\n    })\r\n    .reduce((array, message) => {\r\n      const { clientId, name, color } = message;\r\n      const { data, timestamp, id } = message.messages[0];\r\n      if (array.length !== 0) {\r\n        if (array[array.length - 1].name === name) {\r\n          const newMessage = {\r\n            id: clientId,\r\n            name: name,\r\n            color: color,\r\n            messages: [\r\n              ...array[array.length - 1].messages,\r\n              { id: id, data: data, timestamp: timestamp },\r\n            ],\r\n          };\r\n\r\n          array[array.length - 1] = newMessage;\r\n\r\n          return array;\r\n        } else {\r\n          const newArray = [\r\n            ...array,\r\n            {\r\n              id: clientId,\r\n              name: name,\r\n              color: color,\r\n              messages: [{ id: id, data: data, timestamp: timestamp }],\r\n            },\r\n          ];\r\n          return (array = newArray);\r\n        }\r\n      } else {\r\n        return (array = [\r\n          {\r\n            id: clientId,\r\n            name: name,\r\n            color: color,\r\n            messages: [{ id: id, data: data, timestamp: timestamp }],\r\n          },\r\n        ]);\r\n      }\r\n    }, []);\r\n\r\n  console.log(newMessages);\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {newMessages.map((message) => {\r\n        const { id, name, color } = message;\r\n\r\n        const myMessage = id === currentMember.id;\r\n\r\n        return (\r\n          <li className={myMessage ? \"message fromMe\" : \"message\"} key={id}>\r\n            <span style={{ color: color }} className=\"member\">\r\n              {name}\r\n            </span>\r\n            {message.messages.map((mess) => {\r\n              const time = new Date(mess.timestamp * 1000);\r\n\r\n              const hours = time.getHours();\r\n              const minutes = time.getMinutes();\r\n              return (\r\n                <div\r\n                  key={mess.id}\r\n                  style={{ background: color }}\r\n                  className=\"text\"\r\n                >\r\n                  <span>{mess.data}</span>\r\n                  <span className=\"time\">\r\n                    {(hours > 9 ? hours : \"0\" + hours) +\r\n                      \":\" +\r\n                      (minutes > 9 ? minutes : \"0\" + minutes)}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </li>\r\n        );\r\n      })}\r\n      <div ref={messagesEndRef} />\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./css/style.css\";\r\n\r\nexport default function Members(members) {\r\n  return (\r\n    <div className=\"members\">\r\n      <span>Online: </span>\r\n      {members.members.map((member, index) => {\r\n        const { name, color } = member.clientData;\r\n        if (members.members.length === index + 1) {\r\n          return (\r\n            <span style={{ color: color }} key={member.id}>\r\n              {name}{\" \"}\r\n            </span>\r\n          );\r\n        } else {\r\n          return (\r\n            <span style={{ color: color }} key={member.id}>\r\n              {name},{\" \"}\r\n            </span>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Messages from \"./Messages\";\r\nimport \"./css/style.css\";\r\nimport Members from \"./Members\";\r\n\r\nconst CHANNEL_ID = \"meflNXPM4zkSd7rh\";\r\n\r\nconst random_name = require(\"node-random-name\");\r\n\r\nvar randomColor = require(\"randomcolor\");\r\n\r\nconst ROOM_NAME = \"observable-room\";\r\n\r\nconst getRandomColor = () => {\r\n  const color = randomColor({\r\n    luminosity: \"light\",\r\n    format: \"rgb\",\r\n  });\r\n  return color;\r\n};\r\n\r\nexport default function Main() {\r\n  const [member, setMember] = useState({\r\n    name: random_name(),\r\n    color: getRandomColor(),\r\n  });\r\n  const [members, setMembers] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const drone = useMemo(\r\n    () => new window.Scaledrone(CHANNEL_ID, { data: member }),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    drone.on(\"open\", (error) => {\r\n      if (error) {\r\n        return console.error(error);\r\n      }\r\n\r\n      setMember({\r\n        name: random_name(),\r\n        color: getRandomColor(),\r\n        id: drone.clientId,\r\n      });\r\n\r\n      const room = drone.subscribe(ROOM_NAME);\r\n\r\n      room.on(\"open\", (error) => {\r\n        if (error) {\r\n          return console.error(error);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n\r\n      room.on(\"members\", (members) => {\r\n        setMembers(() => [...members]);\r\n      });\r\n\r\n      room.on(\"member_join\", (member) => {\r\n        setMembers((members) => [...members, member]);\r\n      });\r\n\r\n      room.on(\"member_leave\", ({ id }) => {\r\n        setMembers((members) => members.filter((member) => member.id !== id));\r\n      });\r\n\r\n      room.on(\"message\", (message) => {\r\n        // svaki puta kada se event message pojavi u roomu, izvršiti će se funkcija u setMessages, callback ce dohvatiti zadnje stanje messages-a\r\n        setMessages((messages) => [...messages, message]);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const sendMessage = useCallback(\r\n    (message) => {\r\n      drone.publish({\r\n        room: ROOM_NAME,\r\n        message,\r\n      });\r\n    },\r\n    [drone]\r\n  );\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n        <Members members={members} />\r\n        <Messages currentMember={member} messages={messages} />\r\n        <Input isLoading={isLoading} sendMessage={sendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\nimport Main from \"./chat/Main\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}